[
    {
        "type": "refactor",
        "module": "CleaningRobot",
        "obj": "CleaningRobot",
        "line": 5,
        "column": 0,
        "endLine": 5,
        "endColumn": 19,
        "path": "C:\\Users\\Michelangelo\\CS\\Python\\tasks_analysis\\task2_results\\no-tdd\\student_03_cleaning_robot\\CleaningRobot.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (9/7)",
        "message-id": "R0902"
    },
    {
        "type": "refactor",
        "module": "CleaningRobot",
        "obj": "CleaningRobot.robot_status",
        "line": 71,
        "column": 8,
        "endLine": 86,
        "endColumn": 94,
        "path": "C:\\Users\\Michelangelo\\CS\\Python\\tasks_analysis\\task2_results\\no-tdd\\student_03_cleaning_robot\\CleaningRobot.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "CleaningRobot",
        "obj": "CleaningRobot.robot_status",
        "line": 84,
        "column": 19,
        "endLine": 84,
        "endColumn": 56,
        "path": "C:\\Users\\Michelangelo\\CS\\Python\\tasks_analysis\\task2_results\\no-tdd\\student_03_cleaning_robot\\CleaningRobot.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "CleaningRobot",
        "obj": "CleaningRobot.robot_status",
        "line": 86,
        "column": 19,
        "endLine": 86,
        "endColumn": 39,
        "path": "C:\\Users\\Michelangelo\\CS\\Python\\tasks_analysis\\task2_results\\no-tdd\\student_03_cleaning_robot\\CleaningRobot.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "CleaningRobot",
        "obj": "CleaningRobot.execute_command",
        "line": 120,
        "column": 18,
        "endLine": 120,
        "endColumn": 50,
        "path": "C:\\Users\\Michelangelo\\CS\\Python\\tasks_analysis\\task2_results\\no-tdd\\student_03_cleaning_robot\\CleaningRobot.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'command in ('r', 'l')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "convention",
        "module": "CleaningRobot",
        "obj": "CleaningRobot.enable_cleaning_system",
        "line": 154,
        "column": 11,
        "endLine": 154,
        "endColumn": 24,
        "path": "C:\\Users\\Michelangelo\\CS\\Python\\tasks_analysis\\task2_results\\no-tdd\\student_03_cleaning_robot\\CleaningRobot.py",
        "symbol": "singleton-comparison",
        "message": "Comparison 'state == True' should be 'state is True' if checking for the singleton value True, or 'bool(state)' if testing for truthiness",
        "message-id": "C0121"
    },
    {
        "type": "convention",
        "module": "CleaningRobot",
        "obj": "CleaningRobot.enable_cleaning_system",
        "line": 154,
        "column": 29,
        "endLine": 154,
        "endColumn": 61,
        "path": "C:\\Users\\Michelangelo\\CS\\Python\\tasks_analysis\\task2_results\\no-tdd\\student_03_cleaning_robot\\CleaningRobot.py",
        "symbol": "singleton-comparison",
        "message": "Comparison 'self.cleaning_system_on == False' should be 'self.cleaning_system_on is False' if checking for the singleton value False, or 'not self.cleaning_system_on' if testing for falsiness",
        "message-id": "C0121"
    },
    {
        "type": "convention",
        "module": "CleaningRobot",
        "obj": "CleaningRobot.enable_cleaning_system",
        "line": 157,
        "column": 13,
        "endLine": 157,
        "endColumn": 27,
        "path": "C:\\Users\\Michelangelo\\CS\\Python\\tasks_analysis\\task2_results\\no-tdd\\student_03_cleaning_robot\\CleaningRobot.py",
        "symbol": "singleton-comparison",
        "message": "Comparison 'state == False' should be 'state is False' if checking for the singleton value False, or 'not state' if testing for falsiness",
        "message-id": "C0121"
    },
    {
        "type": "convention",
        "module": "CleaningRobot",
        "obj": "CleaningRobot.enable_cleaning_system",
        "line": 157,
        "column": 32,
        "endLine": 157,
        "endColumn": 63,
        "path": "C:\\Users\\Michelangelo\\CS\\Python\\tasks_analysis\\task2_results\\no-tdd\\student_03_cleaning_robot\\CleaningRobot.py",
        "symbol": "singleton-comparison",
        "message": "Comparison 'self.cleaning_system_on == True' should be 'self.cleaning_system_on is True' if checking for the singleton value True, or 'bool(self.cleaning_system_on)' if testing for truthiness",
        "message-id": "C0121"
    },
    {
        "type": "convention",
        "module": "CleaningRobot",
        "obj": "CleaningRobot.set_recharge_led",
        "line": 162,
        "column": 11,
        "endLine": 162,
        "endColumn": 24,
        "path": "C:\\Users\\Michelangelo\\CS\\Python\\tasks_analysis\\task2_results\\no-tdd\\student_03_cleaning_robot\\CleaningRobot.py",
        "symbol": "singleton-comparison",
        "message": "Comparison 'state == True' should be 'state is True' if checking for the singleton value True, or 'bool(state)' if testing for truthiness",
        "message-id": "C0121"
    },
    {
        "type": "convention",
        "module": "CleaningRobot",
        "obj": "CleaningRobot.set_recharge_led",
        "line": 162,
        "column": 29,
        "endLine": 162,
        "endColumn": 57,
        "path": "C:\\Users\\Michelangelo\\CS\\Python\\tasks_analysis\\task2_results\\no-tdd\\student_03_cleaning_robot\\CleaningRobot.py",
        "symbol": "singleton-comparison",
        "message": "Comparison 'self.battery_led_on == False' should be 'self.battery_led_on is False' if checking for the singleton value False, or 'not self.battery_led_on' if testing for falsiness",
        "message-id": "C0121"
    },
    {
        "type": "convention",
        "module": "CleaningRobot",
        "obj": "CleaningRobot.set_recharge_led",
        "line": 165,
        "column": 13,
        "endLine": 165,
        "endColumn": 27,
        "path": "C:\\Users\\Michelangelo\\CS\\Python\\tasks_analysis\\task2_results\\no-tdd\\student_03_cleaning_robot\\CleaningRobot.py",
        "symbol": "singleton-comparison",
        "message": "Comparison 'state == False' should be 'state is False' if checking for the singleton value False, or 'not state' if testing for falsiness",
        "message-id": "C0121"
    },
    {
        "type": "convention",
        "module": "CleaningRobot",
        "obj": "CleaningRobot.set_recharge_led",
        "line": 165,
        "column": 32,
        "endLine": 165,
        "endColumn": 59,
        "path": "C:\\Users\\Michelangelo\\CS\\Python\\tasks_analysis\\task2_results\\no-tdd\\student_03_cleaning_robot\\CleaningRobot.py",
        "symbol": "singleton-comparison",
        "message": "Comparison 'self.battery_led_on == True' should be 'self.battery_led_on is True' if checking for the singleton value True, or 'bool(self.battery_led_on)' if testing for truthiness",
        "message-id": "C0121"
    },
    {
        "type": "convention",
        "module": "CleaningRobot",
        "obj": "CleaningRobot.enable_motor",
        "line": 170,
        "column": 11,
        "endLine": 170,
        "endColumn": 24,
        "path": "C:\\Users\\Michelangelo\\CS\\Python\\tasks_analysis\\task2_results\\no-tdd\\student_03_cleaning_robot\\CleaningRobot.py",
        "symbol": "singleton-comparison",
        "message": "Comparison 'state == True' should be 'state is True' if checking for the singleton value True, or 'bool(state)' if testing for truthiness",
        "message-id": "C0121"
    },
    {
        "type": "convention",
        "module": "CleaningRobot",
        "obj": "CleaningRobot.enable_motor",
        "line": 170,
        "column": 29,
        "endLine": 170,
        "endColumn": 51,
        "path": "C:\\Users\\Michelangelo\\CS\\Python\\tasks_analysis\\task2_results\\no-tdd\\student_03_cleaning_robot\\CleaningRobot.py",
        "symbol": "singleton-comparison",
        "message": "Comparison 'self.motor_on == False' should be 'self.motor_on is False' if checking for the singleton value False, or 'not self.motor_on' if testing for falsiness",
        "message-id": "C0121"
    },
    {
        "type": "convention",
        "module": "CleaningRobot",
        "obj": "CleaningRobot.enable_motor",
        "line": 172,
        "column": 13,
        "endLine": 172,
        "endColumn": 27,
        "path": "C:\\Users\\Michelangelo\\CS\\Python\\tasks_analysis\\task2_results\\no-tdd\\student_03_cleaning_robot\\CleaningRobot.py",
        "symbol": "singleton-comparison",
        "message": "Comparison 'state == False' should be 'state is False' if checking for the singleton value False, or 'not state' if testing for falsiness",
        "message-id": "C0121"
    },
    {
        "type": "convention",
        "module": "CleaningRobot",
        "obj": "CleaningRobot.enable_motor",
        "line": 172,
        "column": 32,
        "endLine": 172,
        "endColumn": 53,
        "path": "C:\\Users\\Michelangelo\\CS\\Python\\tasks_analysis\\task2_results\\no-tdd\\student_03_cleaning_robot\\CleaningRobot.py",
        "symbol": "singleton-comparison",
        "message": "Comparison 'self.motor_on == True' should be 'self.motor_on is True' if checking for the singleton value True, or 'bool(self.motor_on)' if testing for truthiness",
        "message-id": "C0121"
    },
    {
        "type": "error",
        "module": "CleaningRobot",
        "obj": "CleaningRobot.get_battery_charge_state",
        "line": 176,
        "column": 8,
        "endLine": 176,
        "endColumn": 42,
        "path": "C:\\Users\\Michelangelo\\CS\\Python\\tasks_analysis\\task2_results\\no-tdd\\student_03_cleaning_robot\\CleaningRobot.py",
        "symbol": "assignment-from-no-return",
        "message": "Assigning result of a function call, where the function has no return",
        "message-id": "E1111"
    }
]