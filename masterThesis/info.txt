treat each test case's oob score as an objective to maximize for fault detection -> MOSA-like algortihm

given an out of lane threshold of 0.5, the car is allowed to stay out of the lane for 0.5 seconds.
Each road generation will be executed, resulting in every test environment having its own (average or highest) out of lane time in the run.

 By highlighting the test environments with the highest out of lane time, we will generate more faults (probably)

 THE GENRATOR ONLY GENERATES THE FIRST POPULATION. THE GENETIC ALGORITHM EVOLVES IT!!!!!!

1 - Get how road generation works in ambiegen, including validation and check for out of line and diversity
2 - Replicate the same thing with deap
3 - Change the objective function


road_gen creates the initial test case population
Fitness is evaluated in Solution.py